// prisma/schema.prisma
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(cuid())
  firstName   String
  lastName    String
  phoneNumber String @unique
  password    String // In a real app, this should be a hash
  roleId      String
  role        Role   @relation(fields: [roleId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  permissions String[]
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  location    String
  startDate   DateTime
  endDate     DateTime?
  category    String
  image       String[]
  hint        String?
  ticketTypes TicketType[]
  promoCodes  PromoCode[]
  attendees   Attendee[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TicketType {
  id      Int     @id @default(autoincrement())
  name    String
  price   Decimal
  total   Int
  sold    Int     @default(0)
  eventId Int
  event   Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  attendees Attendee[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendee {
  id          Int     @id @default(autoincrement())
  name        String
  email       String
  ticketTypeId Int
  ticketType  TicketType @relation(fields: [ticketTypeId], references: [id])
  eventId     Int
  event       Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  checkedIn   Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PromoCode {
  id       Int     @id @default(autoincrement())
  code     String  @unique
  type     String  // PERCENTAGE or DOLLAR
  value    Decimal
  uses     Int     @default(0)
  maxUses  Int
  eventId  Int
  event    Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
