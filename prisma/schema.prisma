// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

model Event {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime?
  location    String
  category    String
  image       String[]
  hint        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  ticketTypes TicketType[]
  attendees   Attendee[]
  promoCodes  PromoCode[]
}

model TicketType {
  id      Int      @id @default(autoincrement())
  name    String
  price   Decimal
  total   Int
  sold    Int      @default(0)
  event   Event    @relation(fields: [eventId], references: [id])
  eventId Int
  Attendee Attendee[]
}

model PromoCode {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  type      String // PERCENTAGE or FIXED
  value     Decimal
  maxUses   Int
  uses      Int      @default(0)
  event   Event    @relation(fields: [eventId], references: [id])
  eventId   Int
}

model Attendee {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  checkedIn    Boolean    @default(false)
  event        Event      @relation(fields: [eventId], references: [id])
  eventId      Int
  ticketType   TicketType @relation(fields: [ticketTypeId], references: [id])
  ticketTypeId Int
  user         User?      @relation(fields: [userId], references: [id])
  userId       String?
}

model User {
  id          String     @id @default(uuid())
  firstName   String
  lastName    String
  phoneNumber String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  role        Role       @relation(fields: [roleId], references: [id])
  roleId      String
  attendees   Attendee[]
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  permissions String[]
  users       User[]
}
