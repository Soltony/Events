
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-static-x64"]
}

model User {
  id          String     @id @default(cuid())
  firstName   String
  lastName    String
  phoneNumber String     @unique
  roleId      String
  role        Role       @relation(fields: [roleId], references: [id])
  attendees   Attendee[]
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  permissions String[]
  users       User[]
}

model Event {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime?
  location    String
  category    String
  image       String[]
  hint        String?
  ticketTypes TicketType[]
  promoCodes  PromoCode[]
  attendees   Attendee[]
}

model TicketType {
  id        Int        @id @default(autoincrement())
  name      String
  price     Decimal
  total     Int
  sold      Int
  eventId   Int
  event     Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  attendees Attendee[]
}

model PromoCode {
  id      Int       @id @default(autoincrement())
  code    String    @unique
  type    PromoType
  value   Decimal
  maxUses Int
  uses    Int
  eventId Int
  event   Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Attendee {
  id           Int        @id @default(autoincregeoment())
  name         String
  email        String
  checkedIn    Boolean    @default(false)
  eventId      Int
  event        Event      @relation(fields: [eventId], references: [id], onDelete: Cascade)
  ticketTypeId Int
  ticketType   TicketType @relation(fields: [ticketTypeId], references: [id])
  userId       String
  user         User       @relation(fields: [userId], references: [id])
}

enum PromoType {
  PERCENTAGE
  FIXED
}

    